import java.util.*;

class Solution {
    class Road {
        int to, time;
        new Road(int to, int time) {
            this.to = to;
            this.time = time;
        }
    }
    
    public int solution(int N, int[][] road, int K) {
        List<Road>[] adj = new ArrayList[N+1];
        for (int i = 0; i < N+1; i++) {
            adj[i] = new ArrayList<>();
        }
        
        for (int i = 0; i < road.length; i++) {
            adj[road[i][0]].add(new Road(road[i][1], road[i][2]));
            adj[road[i][1]].add(new Road(road[i][0], road[i][2]));
        }
        
        int[] dist = new int[N+1];
        Arrays.fill(dist, Integer.MAX_VALUE);
        dist[1] = 0;
        
        PriorityQueue<Road> pq = new PriorityQueue<>((a, b) -> a.time - b.time);
        pq.add(new Road(0, 0));
        
        while (!pq.isEmpty) {
            Road curr = pq.poll();
            curr.
        }
        
        
        return answer;
    }
}
