import sys
input = sys.stdin.readline

def init(node, start, end):
    if start == end:
        tree[node] = arr[start]
    else:
        mid = (start + end) // 2
        tree[node] = min(
            init(node * 2, start, mid),
            init(node * 2 + 1, mid + 1, end)
        )
    return tree[node]

def query(node, start, end, left, right):
    if right < start or end < left:
        return float('inf')
    if left <= start and end <= right:
        return tree[node]
    mid = (start + end) // 2
    return min(
        query(node * 2, start, mid, left, right),
        query(node * 2 + 1, mid + 1, end, left, right)
    )

N, M = map(int, input().split())
arr = [0] + [int(input()) for _ in range(N)]  # 1-based index
tree = [0] * (4 * N)

init(1, 1, N)

for _ in range(M):
    a, b = map(int, input().split())
    print(query(1, 1, N, a, b))
