package com.ssafy.gu;

import java.util.PriorityQueue;
import java.util.Scanner;

public class BOJ4485 {
	static class Node {
		int r, c, w;
		public Node(int r, int c, int w) {
			this.r = r;
			this.c = c;
			this.w = w;
		}
	}
	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		int[][] cave = new int[N][N];
		int[][] dist = new int[N][N];
		for (int i = 0; i < N; i++) {
			for (int j = 0; j < N; j++) {
				cave[i][j] = sc.nextInt();
				dist[i][j] = Integer.MAX_VALUE;
			}
		}
		
		dist[0][0] = cave[0][0];
		PriorityQueue<Node> pq = new PriorityQueue<>((a, b) -> a.w - b.w);
		pq.add(new Node(0, 0, cave[0][0]));
		int[] dr = {-1, 1, 0, 0};
		int[] dc = {0, 0, -1, 1};
		while (!pq.isEmpty()) {
			Node curr = pq.poll();
			for (int d = 0; d < 4; d++) {
				int nr = curr.r + dr[d];
				int nc = curr.c + dc[d];
				
				if (nr < 0 || nc < 0 || nr >= N || nc >= N) {
					
				}
			}
		}
		
	}
}
