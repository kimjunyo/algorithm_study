import java.util.*;
import java.io.*;

public class BOJ2565{
  static class Line{
    int s, e;
    List<Integer> crossedS;
    Line(int s, int e) {
      this.s = s;
      this.e = e;
      this.crossedS = new ArrayList<>();
    }
  }
  
  public static void main(String args[]) throws IOException {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    int N = Integer.parseInt(br.readLine());
    Line[] lines = new Line[N];
    for (int i = 0; i < N; i++) {
      StringTokenizer st = new StringTokenizer(br.readLine());
      Line line = new Line(Integer.parseInt(st.nextToken()), Integer.parseInt(st.nextToken()));
      lines[i] = line;
    }

    for (int i = 0; i < N; i++) {
      for (int j = i; j < N; j++) {
        if ((lines[i].s < lines[j].s && lines[i].e > lines[j].e) || (lines[i].s > lines[j].s && lines[i].e < lines[j].e)) {
          lines[i].crossedS.add(lines[j].s);
          lines[j].crossedS.add(lines[i].s);
        }
      }
    }

    boolean[] removed = new boolean[N];
    int cnt = 0;
    while (true) {
      int max = 0;
      int maxIdx = -1;
      for (int i = 0; i < N; i++) {
        if (removed[i]) continue;
        if (max < lines[i].crossedS.size()) {
          max = lines[i].crossedS.size();
          maxIdx = i;
        }
      }
      if (max == 0) {
        System.out.print(cnt);
        return;
      }
      removed[maxIdx] = true;
      cnt++;
      for (int i = 0; i < lines[maxIdx].crossedS.size(); i++) {
        int numS = lines[maxIdx].crossedS.get(i);
        
        for (int j = 0; j < lines.length; j++) {
          if (lines[j].s == numS) {
            lines[j].crossedS.remove(Integer.valueOf(lines[maxIdx].s));
            break;
          }
        }
      }
    }
  }
}
